// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by openapi-gen. DO NOT EDIT.

// This file was autogenerated by openapi-gen. Do not edit it manually!

package shared

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"./pkg/apis/networkaddonsoperator/shared.KubeMacPool":             schema_pkg_apis_networkaddonsoperator_shared_KubeMacPool(ref),
		"./pkg/apis/networkaddonsoperator/shared.LinuxBridge":             schema_pkg_apis_networkaddonsoperator_shared_LinuxBridge(ref),
		"./pkg/apis/networkaddonsoperator/shared.MacvtapCni":              schema_pkg_apis_networkaddonsoperator_shared_MacvtapCni(ref),
		"./pkg/apis/networkaddonsoperator/shared.Multus":                  schema_pkg_apis_networkaddonsoperator_shared_Multus(ref),
		"./pkg/apis/networkaddonsoperator/shared.NMState":                 schema_pkg_apis_networkaddonsoperator_shared_NMState(ref),
		"./pkg/apis/networkaddonsoperator/shared.NetworkAddonsConfigSpec": schema_pkg_apis_networkaddonsoperator_shared_NetworkAddonsConfigSpec(ref),
		"./pkg/apis/networkaddonsoperator/shared.Ovs":                     schema_pkg_apis_networkaddonsoperator_shared_Ovs(ref),
		"./pkg/apis/networkaddonsoperator/shared.Placement":               schema_pkg_apis_networkaddonsoperator_shared_Placement(ref),
		"./pkg/apis/networkaddonsoperator/shared.PlacementConfiguration":  schema_pkg_apis_networkaddonsoperator_shared_PlacementConfiguration(ref),
		"./pkg/apis/networkaddonsoperator/shared.SelfSignConfiguration":   schema_pkg_apis_networkaddonsoperator_shared_SelfSignConfiguration(ref),
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_KubeMacPool(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"rangeStart": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"rangeEnd": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_LinuxBridge(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_MacvtapCni(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_Multus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_NMState(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_NetworkAddonsConfigSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "NetworkAddonsConfigSpec defines the desired state of NetworkAddonsConfig",
				Type:        []string{"object"},
				Properties: map[string]spec.Schema{
					"multus": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.Multus"),
						},
					},
					"linuxBridge": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.LinuxBridge"),
						},
					},
					"ovs": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.Ovs"),
						},
					},
					"kubeMacPool": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.KubeMacPool"),
						},
					},
					"imagePullPolicy": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"nmstate": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.NMState"),
						},
					},
					"macvtap": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.MacvtapCni"),
						},
					},
					"selfSignConfiguration": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.SelfSignConfiguration"),
						},
					},
					"placementConfiguration": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.PlacementConfiguration"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/networkaddonsoperator/shared.KubeMacPool", "./pkg/apis/networkaddonsoperator/shared.LinuxBridge", "./pkg/apis/networkaddonsoperator/shared.MacvtapCni", "./pkg/apis/networkaddonsoperator/shared.Multus", "./pkg/apis/networkaddonsoperator/shared.NMState", "./pkg/apis/networkaddonsoperator/shared.Ovs", "./pkg/apis/networkaddonsoperator/shared.PlacementConfiguration", "./pkg/apis/networkaddonsoperator/shared.SelfSignConfiguration"},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_Ovs(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
			},
		},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_Placement(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"nodeSelector": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"object"},
							AdditionalProperties: &spec.SchemaOrBool{
								Allows: true,
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Type:   []string{"string"},
										Format: "",
									},
								},
							},
						},
					},
					"affinity": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/api/core/v1.Affinity"),
						},
					},
					"tolerations": {
						SchemaProps: spec.SchemaProps{
							Type: []string{"array"},
							Items: &spec.SchemaOrArray{
								Schema: &spec.Schema{
									SchemaProps: spec.SchemaProps{
										Ref: ref("k8s.io/api/core/v1.Toleration"),
									},
								},
							},
						},
					},
				},
			},
		},
		Dependencies: []string{
			"k8s.io/api/core/v1.Affinity", "k8s.io/api/core/v1.Toleration"},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_PlacementConfiguration(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"infra": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.Placement"),
						},
					},
					"workloads": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("./pkg/apis/networkaddonsoperator/shared.Placement"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"./pkg/apis/networkaddonsoperator/shared.Placement"},
	}
}

func schema_pkg_apis_networkaddonsoperator_shared_SelfSignConfiguration(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Type: []string{"object"},
				Properties: map[string]spec.Schema{
					"caRotateInterval": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"caOverlapInterval": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
					"certRotateInterval": {
						SchemaProps: spec.SchemaProps{
							Type:   []string{"string"},
							Format: "",
						},
					},
				},
			},
		},
	}
}
